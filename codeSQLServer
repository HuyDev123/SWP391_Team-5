CREATE TABLE Role (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(255) NOT NULL
);

CREATE TABLE [User] (
    id INT IDENTITY(1,1) PRIMARY KEY,
    full_name NVARCHAR(255),
    email VARCHAR(255) NOT NULL UNIQUE,
    role_id INT NOT NULL,
    is_active BIT,
    created_at DATETIME,
    FOREIGN KEY (role_id) REFERENCES Role(id)
);

CREATE TABLE Service (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(255),
    description NVARCHAR(MAX),
    price DECIMAL(18,2),
    extra_per_sample_fee DECIMAL(18,2),
    is_active BIT
);

CREATE TABLE Booking (
    id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT,
    booking_date DATETIME,
    status NVARCHAR(100),
    staff_id INT,
    note NVARCHAR(MAX),

    -- Thông tin khách hàng
    full_name NVARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(20),

    -- Loại xét nghiệm: 1 = hành chính, 0 = nhân sự
    is_administrative BIT,

    -- 1: Lấy mẫu tại trung tâm, 0: Lấy mẫu tại nhà
    is_center_collected BIT,    

    -- Địa chỉ gửi kit (nếu lấy mẫu tại nhà)
    address NVARCHAR(500),
    kit_status NVARCHAR(100),

    -- Ngày, giờ lấy mẫu tại trung tâm (nếu lấy tại trung tâm)
    center_sample_date DATE,
    center_sample_time TIME,

    -- Thêm mới:
    payment_method NVARCHAR(100),        -- Phương thức thanh toán (tiền mặt, chuyển khoản, QR, v.v.)
    num_participants INT,                -- Số lượng người tham gia xét nghiệm

    FOREIGN KEY (user_id) REFERENCES [User](id),
    FOREIGN KEY (staff_id) REFERENCES [User](id)
);

-- Tạo bảng Payment
CREATE TABLE Payment (
    id INT IDENTITY(1,1) PRIMARY KEY,
    booking_id INT NOT NULL,
    amount DECIMAL(15,2) NOT NULL,
    payment_method VARCHAR(20) NOT NULL,
    receipt_image VARCHAR(255),
    note NVARCHAR(255),
    created_at DATETIME2 NOT NULL,
    staff_id INT,
    FOREIGN KEY (booking_id) REFERENCES Booking(id),
    FOREIGN KEY (staff_id) REFERENCES [User](id)
); 

CREATE TABLE KitType (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(255),
    description NVARCHAR(MAX),
    quantity INT
);

CREATE TABLE Service_KitType (
    service_id INT NOT NULL,
    kit_type_id INT NOT NULL,
    PRIMARY KEY (service_id, kit_type_id),
    FOREIGN KEY (service_id) REFERENCES Service(id),
    FOREIGN KEY (kit_type_id) REFERENCES KitType(id)
);

CREATE TABLE Booking_Service (
    booking_id INT NOT NULL,
    service_id INT NOT NULL,
    kit_type_id INT, -- thêm cột này để làm foreign key tới KitType
    sample_quantity INT,
    PRIMARY KEY (booking_id, service_id),
    FOREIGN KEY (booking_id) REFERENCES Booking(id),
    FOREIGN KEY (service_id) REFERENCES Service(id),
    FOREIGN KEY (kit_type_id) REFERENCES KitType(id)
);

CREATE TABLE TestResult (
    id INT IDENTITY(1,1) PRIMARY KEY,
	booking_id INT NOT NULL,
    service_id INT NOT NULL,
    result_file VARCHAR(255),
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES [User](id),
    FOREIGN KEY (booking_id, service_id) REFERENCES Booking_Service(booking_id, service_id),

    UNIQUE (booking_id, service_id)
);

CREATE TABLE Participant (
    id INT IDENTITY(1,1) PRIMARY KEY,
    booking_id INT NOT NULL,
    user_id INT,
    full_name NVARCHAR(255),
    gender NVARCHAR(10),
    birthday DATE,
    phone VARCHAR(20),
    email VARCHAR(255),
    address NVARCHAR(MAX),
    cccd_number VARCHAR(50),
    cccd_issued_date DATE,
    cccd_issued_place NVARCHAR(255),
    relationship NVARCHAR(50),
    photo_url VARCHAR(255),
    note NVARCHAR(MAX),
    FOREIGN KEY (booking_id) REFERENCES Booking(id),
    FOREIGN KEY (user_id) REFERENCES [User](id)
);

CREATE TABLE TestSample (
    id INT IDENTITY(1,1) PRIMARY KEY,
    service_id INT NOT NULL,
    participant_id INT NOT NULL,
    sample_code VARCHAR(100),
    sample_type NVARCHAR(50),
    collected_by INT,
    collected_at DATETIME,
    note NVARCHAR(MAX),
    FOREIGN KEY (service_id) REFERENCES Service(id),
    FOREIGN KEY (participant_id) REFERENCES Participant(id),
    FOREIGN KEY (collected_by) REFERENCES [User](id)
);

CREATE TABLE Feedback (
    id INT IDENTITY(1,1) PRIMARY KEY,
    booking_id INT NOT NULL,
    service_id INT NOT NULL,
    user_id INT,
    staff_id INT,
    rating INT,
    comment NVARCHAR(MAX),
    created_at DATETIME,
    FOREIGN KEY (booking_id, service_id) REFERENCES Booking_Service(booking_id, service_id),
    FOREIGN KEY (user_id) REFERENCES [User](id),
    FOREIGN KEY (staff_id) REFERENCES [User](id),

    UNIQUE (booking_id, service_id, user_id)
);

CREATE TABLE Blog (
    id INT IDENTITY(1,1) PRIMARY KEY,
    author_id INT NOT NULL,
    title NVARCHAR(255) NOT NULL,
    content NVARCHAR(MAX),
    is_published BIT,
    created_at DATETIME,
    FOREIGN KEY (author_id) REFERENCES [User](id)
);

CREATE TABLE Surcharge (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(100),           -- Tên loại phụ phí (VD: Phí hành chính, Phí gấp...)
    description NVARCHAR(255),    -- Mô tả chi tiết (tuỳ chọn)
    fee_per_unit DECIMAL(18,2),   -- Mức phí trên mỗi đơn vị (người, mẫu, dịch vụ,...)
    unit NVARCHAR(50),            -- Đơn vị tính: 'participant', 'booking', 'sample'
    is_active BIT,      -- Có đang áp dụng không
);

INSERT INTO Role (name) VALUES
('Admin'),
('Manager'),
('Staff'),
('Customer');

INSERT INTO Service (name, description, price, extra_sample_fee, is_active) VALUES
(N'Xét nghiệm ADN Cha - Con', 
 N'Xác định quan hệ huyết thống cha - con. Thời gian: Khoảng 4 ngày làm việc. Bảo mật tuyệt đối. Độ chính xác 99.99%.', 
 3000000, 500000, 1),
(N'Xét nghiệm ADN Mẹ - Con', 
 N'Xác định quan hệ huyết thống mẹ - con. Thời gian: Khoảng 4 ngày làm việc. Bảo mật tuyệt đối. Độ chính xác 99.99%.', 
 3000000, 500000, 1),
(N'Xét nghiệm ADN Anh/Chị - Em', 
 N'Xác định quan hệ huyết thống anh chị em. Thời gian: Khoảng 5 ngày làm việc. Bảo mật tuyệt đối. Độ chính xác 99.99%.', 
 2500000, 500000, 1),
(N'Xét nghiệm ADN Ông/Bà - Cháu', 
 N'Xác định quan hệ huyết thống ông bà cháu. Thời gian: Khoảng 5 ngày làm việc. Bảo mật tuyệt đối. Độ chính xác 99.99%.', 
 3500000, 700000, 1);

-- 1. Thêm 4 loại kit vào bảng KitType
INSERT INTO KitType (name, description) VALUES
(N'GlobalFiler™ (Applied Biosystems)', N''),
(N'PowerPlex® Fusion (Promega)', N''),
(N'Investigator® 24plex QS (Qiagen)', N''),
(N'QIAamp DNA Mini Kit (Qiagen)', N'');

-- 2. Thêm dữ liệu vào bảng Service_KitType
-- Với giả định service_id và kit_type_id tương ứng: (1,1), (2,2), (3,3), (4,4)
INSERT INTO Service_KitType (service_id, kit_type_id) VALUES
(1, 1),
(2, 2),
(3, 3),
(4, 4);

INSERT INTO Surcharge (name, description, fee_per_unit, unit, is_active)
VALUES 
(N'Phí hành chính', N'Tính theo số người tham gia', 100000, 'participant', 1),
